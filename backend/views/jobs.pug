extends base

include mixins/_table
include mixins/_pagination
include mixins/_filtersAll

  block extraCSS
   link(rel='stylesheet' href='/css/jobs/jobs.css')

block content
  section.section.section-body
    // FILTERS
    .filters
      .filters__header
        h1.header JOBS
      .filters__container
        .filters__filters
          +filtersAll([
              {name: 'Rarity', options: ['All', 1,2,3,4,5]},
              {name: 'Element', options: ['All', 'Fire', 'Water', 'Earth', 'Wind', 'Thunder', 'Light', 'Dark'].sort()},
              {name: 'Attribute', options: ['All', 'MaxHP', 'Strength', 'Agility', 'Intelligence'].sort()},
              {name: 'Type', options: ['All', 'Damage', 'Heal', 'Buff', 'Action Buff', "Debuff", 
                                      "Vulnerable", "Protect", "Remove Debuff", "Negative", "Other"].sort()},
              {name: 'Apply', options: [ "All",'PracticePerfect', 'Exhaust', 'LifeSteal', 'LastResort', 'TurnCharge',
                                        'FocusEnergy', 'NegativePower', 'Curse', 'Scheduled', 'AutoFire', 'Gamble',
                                        'Creature', 'Humanoid', 'Matter', 'Spirit', 'Combo Blend', 'Overloaded',
                                        'Strength Synergy', 'Agility Synergy', 'MaxHP Synergy', 'Intelligence Synergy',
                                        'Fire', 'Water', 'Earth', 'Wind', 'Thunder', 'Dark', 'Light'
                                      ].sort(), value: "All"},
              {name: 'Passive', options: ['All', 1,2,3,4,5]},
              {name: 'Search in', options: ['Both', 'Passive', 'Switch']}
            ])
          .filters__buttons-filters
            button.reset-filters(type='button') Reset
            button.search-filters(type='button') Search...
        .filters__gerneral-options
          .filter.filters__input
            label Choose lvl
            input.choose-level(style="width: 50px", type="number", min=1, step=10 value=1)
          .filter.filters.filters--jobmania-crystal
            +select('Jobmania crystal', [0, 1, 2, 3, 4, 5])
          .filter.filters__buttons-gen-options
            button(type='button') Apply
            button(type='button') Reset
          .filter.filters__input--search
            label Search
            input.choose-level(style="width: 150px", type="text", placeholder="Search...")
          .filter.filters__pagination
            +pagination(jobs.length-1)


    // TABLE
    table.table.table__main-table
      +table('jobs', 'id', 'Icon', 'Name', 'Rarity', 'Passive', 'Switch', 'Deck', 'HP', 'Str', 'Agi', 'Int')
      tbody.shadow
        each job, i in jobs
            tr
              td.index= job['index'] * 1
              td.icon.icon--job
                .icon-container
                  img(src=`../../../img/Jobs/${job.job}.png`, alt=`${job.job}`
                      style=`background-size: contain; position: relative; background-image: url("../../../img/Jobs/Frames/${job.rarity}.png")`)
              //- for some reason just job.job_id.lang doesnt' work
              //- actually it works, it needs to be defined in schema
              //- let key = Object.entries(job.job_id.toJSON()).find(j => j[0] === lang)[1]
              td.job= job.job_id[lang]
              td.rarity
                each star, i in [1, 2, 3, 4, 5]
                  if star <= job.rarity
                    img.star(src="../../../img/events/starColor1.png", alt="star", width=25)
                    
              td.passive-kill= job.passive 
              td.switch-skill.tooltip= job.switch_skil
                - 
                  const replaceDesc = (skill, skillNum, replace) => {
                    skillNum = skillNum && skillNum != '' ? skillNum[lang] : ''
                    let replacer = skill ? skill[replace] : ''
                    if (replacer !== '' && replacer !== undefined) {
                      replacer = replacer.includes('||') ? replacer.split('||') : replacer
                      for (let i=0; i < replacer.length; i++) {
                        if (replacer[i].includes('Keys')) {
                          replacer[i] = replacer[i].split(',\n')
                          let translated = replacer[i].find(val => val.includes(lang))
                          let index = translated.indexOf(': ')
                          translated = translated.substring(index+2)
                          replacer[i] = translated
                          // for finale needs more work
                        }
                        const regex = new RegExp(`\\{${i}\\}`, 'g');
                        skillNum = typeof replacer == 'string' 
                                  ? skillNum.replace(regex, replacer)
                                  : skillNum.replace(regex, replacer[i])
                      }
                    }
                    return skillNum
                  }
                  let sSkill = abilities.find(abil => abil.name === job.switch_skil)
                  let sSkill1 = sSkill ? sSkill.description1_Id : ''
                  sSkill1 = replaceDesc(sSkill, sSkill1, "replace1")

                  let sSkill2 = sSkill ? sSkill.description2_Id : ''
                  sSkill2 = replaceDesc(sSkill, sSkill2, "replace2")

                  let sSkill3 = sSkill ? sSkill.description3_Id : ''
                  sSkill3 = replaceDesc(sSkill, sSkill3, "replace3")

                  let sSkill4 = sSkill ? sSkill.description4_Id : ''
                  sSkill4 = replaceDesc(sSkill, sSkill4, "replace4")
                span.tooltip.tooltittext= sSkill1 + '\n' + sSkill2 + '\n' + sSkill3 + '\n' + sSkill4
              //- <span class="tooltipMy tooltiptext">Gain 10%/15% <span class="maxhp"><img class="icon" src="https://jobmania.epicgamer.org/503b829fcb9ebcf20cd8.png" alt="hp"> Max HP</span> Protect . <span class="tipApply"></span></span>
              td.deck 
                - if (job.abilities_5)
                  span= `${job.abilities_5} x5`
                  br
                - if (job.abilities_3)  
                  span= `${job.abilities_3} x3`
                  br
                - if (job.abilities_2) 
                  span= `${job.abilities_2} x2` 
                  br
                - if (job.abilities_1)
                  span= `${job.abilities_1} x1` 
                  br
              td.hp= job.hp
              td.str= job.strength
              td.agi= job.agility
              td.int= job.intelligence

  script(type="module", src='/js/utils/pagination.js')
  script(type="module", src='/js/jobs.js')
